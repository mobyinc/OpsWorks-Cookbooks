<% @workers.each do |worker, options| %>
  <% (options[:process_count] || 1).times do |n| %>
  <% identifier = "#{@application}-#{worker}#{n+1}" %>
  <% conf_file = "#{@deploy[:deploy_to]}/shared/config/sidekiq_#{worker}#{n+1}.yml" %>
  <% pid_file = "#{@deploy[:deploy_to]}/shared/pids/sidekiq_#{identifier}.pid" %>
  <% syslog = @syslog ? "2>&1 | logger -t sidekiq-#{identifier}" : '' %>

<% environment_variables = @deploy[:environment_variables].map { |key, value| "#{key}=#{value}" }.join(' ') %>

check process sidekiq_<%= identifier %>
  with pidfile <%= pid_file %>
  start program = "/bin/su - <%= @deploy[:user] %> -c 'cd <%= @deploy[:current_path] %>/jobs && <%= environment_variables %> bundle exec sidekiq -c 5 -r <%= @deploy[:current_path] %>/jobs/app.rb -P <%= pid_file %> -L <%= @deploy[:current_path] %>/jobs/sidekiq.log'" with timeout 10 seconds
  stop  program = "/bin/su - <%= @deploy[:user] %> -c 'kill -s TERM `cat <%= pid_file %>`'" with timeout 10 seconds
  group <%= @application %>
  if does not exist then start
  if memory usage > 30% for 5 cycles then restart

  <% end %>
<% end %>
